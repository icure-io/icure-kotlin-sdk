/**
 * iCure Cloud API Documentation
 * Spring shop sample application
 *
 * OpenAPI spec version: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.apis

import io.swagger.client.models.MapOfIdsDto
import io.swagger.client.models.MessageWithBatch

import io.swagger.client.infrastructure.*

class BeefactApi(basePath: kotlin.String = "https://kraken.icure.dev") : ApiClient(basePath) {

    /**
     * create batch and message
     * 
     * @param body  
     * @param insuranceId  
     * @param newMessageId  
     * @param numericalRef  
     * @return MessageWithBatch
     */
    @Suppress("UNCHECKED_CAST")
    fun createBatchAndMessage(body: MapOfIdsDto, insuranceId: kotlin.String, newMessageId: kotlin.String, numericalRef: kotlin.Long): MessageWithBatch {
        val localVariableBody: kotlin.Any? = body
        
        val localVariableConfig = RequestConfig(
                RequestMethod.POST,
                "/rest/v1/be_efact/{insuranceId}/{newMessageId}/{numericalRef}".replace("{" + "insuranceId" + "}", "$insuranceId").replace("{" + "newMessageId" + "}", "$newMessageId").replace("{" + "numericalRef" + "}", "$numericalRef")
        )
        val response = request<MessageWithBatch>(
                localVariableConfig
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as MessageWithBatch
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
        }
    }
}
