/**
 * iCure Cloud API Documentation
 * Spring shop sample application
 *
 * OpenAPI spec version: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import io.swagger.client.models.CodeStubDto
import io.swagger.client.models.DelegationDto
import io.swagger.client.models.IdentityDocumentReaderDto
import io.swagger.client.models.InvoicingCodeDto
import io.swagger.client.models.PaymentDto

/**
 * 
 * @param id 
 * @param rev 
 * @param created 
 * @param modified 
 * @param author 
 * @param responsible 
 * @param medicalLocationId 
 * @param tags 
 * @param codes 
 * @param endOfLife 
 * @param deletionDate 
 * @param invoiceDate 
 * @param sentDate 
 * @param printedDate 
 * @param invoicingCodes 
 * @param receipts 
 * @param recipientType 
 * @param recipientId 
 * @param invoiceReference 
 * @param thirdPartyReference 
 * @param thirdPartyPaymentJustification 
 * @param thirdPartyPaymentReason 
 * @param reason 
 * @param invoiceType 
 * @param sentMediumType 
 * @param interventionType 
 * @param groupId 
 * @param paymentType 
 * @param paid 
 * @param payments 
 * @param gnotionNihii 
 * @param gnotionSsin 
 * @param gnotionLastName 
 * @param gnotionFirstName 
 * @param gnotionCdHcParty 
 * @param invoicePeriod 
 * @param careProviderType 
 * @param internshipNihii 
 * @param internshipSsin 
 * @param internshipLastName 
 * @param internshipFirstName 
 * @param internshipCdHcParty 
 * @param internshipCbe 
 * @param supervisorNihii 
 * @param supervisorSsin 
 * @param supervisorLastName 
 * @param supervisorFirstName 
 * @param supervisorCdHcParty 
 * @param supervisorCbe 
 * @param error 
 * @param encounterLocationName 
 * @param encounterLocationNihii 
 * @param encounterLocationNorm 
 * @param longDelayJustification 
 * @param correctiveInvoiceId 
 * @param correctedInvoiceId 
 * @param creditNote 
 * @param creditNoteRelatedInvoiceId 
 * @param idDocument 
 * @param cancelReason 
 * @param cancelDate 
 * @param options 
 * @param secretForeignKeys 
 * @param cryptedForeignKeys 
 * @param delegations 
 * @param encryptionKeys 
 * @param encryptedSelf 
 */
data class InvoiceDto (
    val id: kotlin.String,
    val tags: kotlin.Array<CodeStubDto>,
    val codes: kotlin.Array<CodeStubDto>,
    val invoicingCodes: kotlin.Array<InvoicingCodeDto>,
    val receipts: kotlin.collections.Map<kotlin.String, kotlin.String>,
    val options: kotlin.collections.Map<kotlin.String, kotlin.String>,
    val secretForeignKeys: kotlin.Array<kotlin.String>,
    val cryptedForeignKeys: kotlin.collections.Map<kotlin.String, kotlin.Array<DelegationDto>>,
    val delegations: kotlin.collections.Map<kotlin.String, kotlin.Array<DelegationDto>>,
    val encryptionKeys: kotlin.collections.Map<kotlin.String, kotlin.Array<DelegationDto>>
,
    val rev: kotlin.String? = null,
    val created: kotlin.Long? = null,
    val modified: kotlin.Long? = null,
    val author: kotlin.String? = null,
    val responsible: kotlin.String? = null,
    val medicalLocationId: kotlin.String? = null,
    val endOfLife: kotlin.Long? = null,
    val deletionDate: kotlin.Long? = null,
    val invoiceDate: kotlin.Long? = null,
    val sentDate: kotlin.Long? = null,
    val printedDate: kotlin.Long? = null,
    val recipientType: kotlin.String? = null,
    val recipientId: kotlin.String? = null,
    val invoiceReference: kotlin.String? = null,
    val thirdPartyReference: kotlin.String? = null,
    val thirdPartyPaymentJustification: kotlin.String? = null,
    val thirdPartyPaymentReason: kotlin.String? = null,
    val reason: kotlin.String? = null,
    val invoiceType: InvoiceDto.InvoiceType? = null,
    val sentMediumType: InvoiceDto.SentMediumType? = null,
    val interventionType: InvoiceDto.InterventionType? = null,
    val groupId: kotlin.String? = null,
    val paymentType: InvoiceDto.PaymentType? = null,
    val paid: kotlin.Double? = null,
    val payments: kotlin.Array<PaymentDto>? = null,
    val gnotionNihii: kotlin.String? = null,
    val gnotionSsin: kotlin.String? = null,
    val gnotionLastName: kotlin.String? = null,
    val gnotionFirstName: kotlin.String? = null,
    val gnotionCdHcParty: kotlin.String? = null,
    val invoicePeriod: kotlin.Int? = null,
    val careProviderType: kotlin.String? = null,
    val internshipNihii: kotlin.String? = null,
    val internshipSsin: kotlin.String? = null,
    val internshipLastName: kotlin.String? = null,
    val internshipFirstName: kotlin.String? = null,
    val internshipCdHcParty: kotlin.String? = null,
    val internshipCbe: kotlin.String? = null,
    val supervisorNihii: kotlin.String? = null,
    val supervisorSsin: kotlin.String? = null,
    val supervisorLastName: kotlin.String? = null,
    val supervisorFirstName: kotlin.String? = null,
    val supervisorCdHcParty: kotlin.String? = null,
    val supervisorCbe: kotlin.String? = null,
    val error: kotlin.String? = null,
    val encounterLocationName: kotlin.String? = null,
    val encounterLocationNihii: kotlin.String? = null,
    val encounterLocationNorm: kotlin.Int? = null,
    val longDelayJustification: kotlin.Int? = null,
    val correctiveInvoiceId: kotlin.String? = null,
    val correctedInvoiceId: kotlin.String? = null,
    val creditNote: kotlin.Boolean? = null,
    val creditNoteRelatedInvoiceId: kotlin.String? = null,
    val idDocument: IdentityDocumentReaderDto? = null,
    val cancelReason: kotlin.String? = null,
    val cancelDate: kotlin.Long? = null,
    val encryptedSelf: kotlin.String? = null
) {
    /**
    * 
    * Values: patient,mutualfund,payingagency,insurance,efact,other
    */
    enum class InvoiceType(val value: kotlin.String){
        patient("patient"),
        mutualfund("mutualfund"),
        payingagency("payingagency"),
        insurance("insurance"),
        efact("efact"),
        other("other");
    }
    /**
    * 
    * Values: cdrom,eattest,efact,email,mediprima,paper
    */
    enum class SentMediumType(val value: kotlin.String){
        cdrom("cdrom"),
        eattest("eattest"),
        efact("efact"),
        email("email"),
        mediprima("mediprima"),
        paper("paper");
    }
    /**
    * 
    * Values: total,userfees
    */
    enum class InterventionType(val value: kotlin.String){
        total("total"),
        userfees("userfees");
    }
    /**
    * 
    * Values: cash,wired,insurance,creditcard,debitcard,paypal,bitcoin,other
    */
    enum class PaymentType(val value: kotlin.String){
        cash("cash"),
        wired("wired"),
        insurance("insurance"),
        creditcard("creditcard"),
        debitcard("debitcard"),
        paypal("paypal"),
        bitcoin("bitcoin"),
        other("other");
    }
}