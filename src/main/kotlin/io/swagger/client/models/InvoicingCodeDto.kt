/**
 * iCure Cloud API Documentation
 * Spring shop sample application
 *
 * OpenAPI spec version: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models


/**
 * 
 * @param id 
 * @param dateCode 
 * @param logicalId 
 * @param label 
 * @param userId 
 * @param contactId 
 * @param serviceId 
 * @param tarificationId 
 * @param code 
 * @param paymentType 
 * @param paid 
 * @param totalAmount 
 * @param reimbursement 
 * @param patientIntervention 
 * @param doctorSupplement 
 * @param conventionAmount 
 * @param vat 
 * @param error 
 * @param contract 
 * @param contractDate 
 * @param units 
 * @param side 
 * @param timeOfDay 
 * @param eidReadingHour 
 * @param eidReadingValue 
 * @param override3rdPayerCode 
 * @param override3rdPayerReason 
 * @param transplantationCode 
 * @param prescriberNorm 
 * @param percentNorm 
 * @param prescriberNihii 
 * @param relatedCode 
 * @param prescriptionDate 
 * @param derogationMaxNumber 
 * @param prescriberSsin 
 * @param prescriberLastName 
 * @param prescriberFirstName 
 * @param prescriberCdHcParty 
 * @param locationNihii 
 * @param locationCdHcParty 
 * @param canceled 
 * @param accepted 
 * @param pending 
 * @param resent 
 * @param archived 
 * @param lost 
 * @param insuranceJustification 
 * @param cancelPatientInterventionReason 
 * @param status 
 * @param encryptedSelf 
 */
data class InvoicingCodeDto (
    val id: kotlin.String
,
    val dateCode: kotlin.Long? = null,
    val logicalId: kotlin.String? = null,
    val label: kotlin.String? = null,
    val userId: kotlin.String? = null,
    val contactId: kotlin.String? = null,
    val serviceId: kotlin.String? = null,
    val tarificationId: kotlin.String? = null,
    val code: kotlin.String? = null,
    val paymentType: InvoicingCodeDto.PaymentType? = null,
    val paid: kotlin.Double? = null,
    val totalAmount: kotlin.Double? = null,
    val reimbursement: kotlin.Double? = null,
    val patientIntervention: kotlin.Double? = null,
    val doctorSupplement: kotlin.Double? = null,
    val conventionAmount: kotlin.Double? = null,
    val vat: kotlin.Double? = null,
    val error: kotlin.String? = null,
    val contract: kotlin.String? = null,
    val contractDate: kotlin.Long? = null,
    val units: kotlin.Int? = null,
    val side: kotlin.Int? = null,
    val timeOfDay: kotlin.Int? = null,
    val eidReadingHour: kotlin.Int? = null,
    val eidReadingValue: kotlin.String? = null,
    val override3rdPayerCode: kotlin.Int? = null,
    val override3rdPayerReason: kotlin.String? = null,
    val transplantationCode: kotlin.Int? = null,
    val prescriberNorm: kotlin.Int? = null,
    val percentNorm: kotlin.Int? = null,
    val prescriberNihii: kotlin.String? = null,
    val relatedCode: kotlin.String? = null,
    val prescriptionDate: kotlin.Long? = null,
    val derogationMaxNumber: kotlin.Int? = null,
    val prescriberSsin: kotlin.String? = null,
    val prescriberLastName: kotlin.String? = null,
    val prescriberFirstName: kotlin.String? = null,
    val prescriberCdHcParty: kotlin.String? = null,
    val locationNihii: kotlin.String? = null,
    val locationCdHcParty: kotlin.String? = null,
    val canceled: kotlin.Boolean? = null,
    val accepted: kotlin.Boolean? = null,
    val pending: kotlin.Boolean? = null,
    val resent: kotlin.Boolean? = null,
    val archived: kotlin.Boolean? = null,
    val lost: kotlin.Boolean? = null,
    val insuranceJustification: kotlin.Int? = null,
    val cancelPatientInterventionReason: kotlin.Int? = null,
    val status: kotlin.Long? = null,
    val encryptedSelf: kotlin.String? = null
) {
    /**
    * 
    * Values: cash,wired,insurance,creditcard,debitcard,paypal,bitcoin,other
    */
    enum class PaymentType(val value: kotlin.String){
        cash("cash"),
        wired("wired"),
        insurance("insurance"),
        creditcard("creditcard"),
        debitcard("debitcard"),
        paypal("paypal"),
        bitcoin("bitcoin"),
        other("other");
    }
}