/**
 * iCure Cloud API Documentation
 * Spring shop sample application
 *
 * OpenAPI spec version: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import io.swagger.client.models.EIDItem

/**
 * 
 * @param dateCode 
 * @param codeNomenclature 
 * @param relatedCode 
 * @param eidItem 
 * @param insuranceRef 
 * @param insuranceRefDate 
 * @param units 
 * @param reimbursedAmount 
 * @param patientFee 
 * @param doctorSupplement 
 * @param sideCode 
 * @param timeOfDay 
 * @param override3rdPayerCode 
 * @param gnotionNihii 
 * @param derogationMaxNumber 
 * @param prescriberNorm 
 * @param prescriberNihii 
 * @param personalInterventionCoveredByThirdPartyCode 
 * @param doctorIdentificationNumber 
 * @param invoiceRef 
 * @param percentNorm 
 */
data class InvoiceItem (
    val codeNomenclature: kotlin.Long,
    val units: kotlin.Int,
    val reimbursedAmount: kotlin.Long,
    val patientFee: kotlin.Long,
    val doctorSupplement: kotlin.Long
,
    val dateCode: kotlin.Long? = null,
    val relatedCode: kotlin.Long? = null,
    val eidItem: EIDItem? = null,
    val insuranceRef: kotlin.String? = null,
    val insuranceRefDate: kotlin.Long? = null,
    val sideCode: InvoiceItem.SideCode? = null,
    val timeOfDay: InvoiceItem.TimeOfDay? = null,
    val override3rdPayerCode: kotlin.Int? = null,
    val gnotionNihii: kotlin.String? = null,
    val derogationMaxNumber: InvoiceItem.DerogationMaxNumber? = null,
    val prescriberNorm: InvoiceItem.PrescriberNorm? = null,
    val prescriberNihii: kotlin.String? = null,
    val personalInterventionCoveredByThirdPartyCode: kotlin.Int? = null,
    val doctorIdentificationNumber: kotlin.String? = null,
    val invoiceRef: kotlin.String? = null,
    val percentNorm: InvoiceItem.PercentNorm? = null
) {
    /**
    * 
    * Values: none,left,right
    */
    enum class SideCode(val value: kotlin.String){
        none("None"),
        left("Left"),
        right("Right");
    }
    /**
    * 
    * Values: other,night,weekend,bankholiday,urgent
    */
    enum class TimeOfDay(val value: kotlin.String){
        other("Other"),
        night("Night"),
        weekend("Weekend"),
        bankholiday("Bankholiday"),
        urgent("Urgent");
    }
    /**
    * 
    * Values: other,derogationMaxNumber,otherPrescription,secondPrestationOfDay,thirdAndNextPrestationOfDay
    */
    enum class DerogationMaxNumber(val value: kotlin.String){
        other("Other"),
        derogationMaxNumber("DerogationMaxNumber"),
        otherPrescription("OtherPrescription"),
        secondPrestationOfDay("SecondPrestationOfDay"),
        thirdAndNextPrestationOfDay("ThirdAndNextPrestationOfDay");
    }
    /**
    * 
    * Values: none,onePrescriber,selfPrescriber,addedCode,manyPrescribers
    */
    enum class PrescriberNorm(val value: kotlin.String){
        none("None"),
        onePrescriber("OnePrescriber"),
        selfPrescriber("SelfPrescriber"),
        addedCode("AddedCode"),
        manyPrescribers("ManyPrescribers");
    }
    /**
    * 
    * Values: none,surgicalAid1,surgicalAid2,reducedFee,ah1n1,halfPriceSecondAct,invoiceException,forInformation
    */
    enum class PercentNorm(val value: kotlin.String){
        none("None"),
        surgicalAid1("SurgicalAid1"),
        surgicalAid2("SurgicalAid2"),
        reducedFee("ReducedFee"),
        ah1n1("Ah1n1"),
        halfPriceSecondAct("HalfPriceSecondAct"),
        invoiceException("InvoiceException"),
        forInformation("ForInformation");
    }
}