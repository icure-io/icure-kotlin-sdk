/**
 * iCure Cloud API Documentation
 * Spring shop sample application
 *
 * OpenAPI spec version: v0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models


import io.swagger.client.models.CodeStubDto
import io.swagger.client.models.DelegationDto

/**
 *
 * @param id
 * @param rev
 * @param created
 * @param modified
 * @param author
 * @param responsible
 * @param medicalLocationId
 * @param tags
 * @param codes
 * @param endOfLife
 * @param deletionDate
 * @param attachment
 * @param documentLocation
 * @param documentType
 * @param documentStatus
 * @param externalUri
 * @param mainUti
 * @param name
 * @param otherUtis
 * @param storedICureDocumentId
 * @param attachmentId
 * @param secretForeignKeys
 * @param cryptedForeignKeys
 * @param delegations
 * @param encryptionKeys
 * @param encryptedSelf
 */
data class DocumentDto (
    val id: kotlin.String,
    val tags: kotlin.Array<CodeStubDto>,
    val codes: kotlin.Array<CodeStubDto>,
    val otherUtis: kotlin.Array<kotlin.String>,
    val secretForeignKeys: kotlin.Array<kotlin.String>,
    val cryptedForeignKeys: kotlin.collections.Map<kotlin.String, kotlin.Array<DelegationDto>>,
    val delegations: kotlin.collections.Map<kotlin.String, kotlin.Array<DelegationDto>>,
    val encryptionKeys: kotlin.collections.Map<kotlin.String, kotlin.Array<DelegationDto>>
,
    val rev: kotlin.String? = null,
    val created: kotlin.Long? = null,
    val modified: kotlin.Long? = null,
    val author: kotlin.String? = null,
    val responsible: kotlin.String? = null,
    val medicalLocationId: kotlin.String? = null,
    val endOfLife: kotlin.Long? = null,
    val deletionDate: kotlin.Long? = null,
    val attachment: kotlin.Array<ByteArray>? = null,
    val documentLocation: DocumentDto.DocumentLocation? = null,
    val documentType: DocumentDto.DocumentType? = null,
    val documentStatus: DocumentDto.DocumentStatus? = null,
    val externalUri: kotlin.String? = null,
    val mainUti: kotlin.String? = null,
    val name: kotlin.String? = null,
    val storedICureDocumentId: kotlin.String? = null,
    val attachmentId: kotlin.String? = null,
    val encryptedSelf: kotlin.String? = null
) {
    /**
    *
    * Values: annex,body
    */
    enum class DocumentLocation(val value: kotlin.String){
        annex("annex"),
        body("body");
    }
    /**
    *
    * Values: admission,alert,bvtSample,clinicalpath,clinicalsummary,contactreport,quote,invoice,death,discharge,dischargereport,ebirthBabyMedicalform,ebirthBabyNotification,ebirthMotherMedicalform,ebirthMotherNotification,ecareSafeConsultation,epidemiology,intervention,labrequest,labresult,medicaladvisoragreement,medicationschemeelement,note,notification,pharmaceuticalprescription,prescription,productdelivery,quickdischargereport,radiationexposuremonitoring,referral,report,request,result,sumehr,telemonitoring,template,templateAdmin,treatmentsuspension,vaccination
    */
    enum class DocumentType(val value: kotlin.String){
        admission("admission"),
        alert("alert"),
        bvtSample("bvt_sample"),
        clinicalpath("clinicalpath"),
        clinicalsummary("clinicalsummary"),
        contactreport("contactreport"),
        quote("quote"),
        invoice("invoice"),
        death("death"),
        discharge("discharge"),
        dischargereport("dischargereport"),
        ebirthBabyMedicalform("ebirth_baby_medicalform"),
        ebirthBabyNotification("ebirth_baby_notification"),
        ebirthMotherMedicalform("ebirth_mother_medicalform"),
        ebirthMotherNotification("ebirth_mother_notification"),
        ecareSafeConsultation("ecare_safe_consultation"),
        epidemiology("epidemiology"),
        intervention("intervention"),
        labrequest("labrequest"),
        labresult("labresult"),
        medicaladvisoragreement("medicaladvisoragreement"),
        medicationschemeelement("medicationschemeelement"),
        note("note"),
        notification("notification"),
        pharmaceuticalprescription("pharmaceuticalprescription"),
        prescription("prescription"),
        productdelivery("productdelivery"),
        quickdischargereport("quickdischargereport"),
        radiationexposuremonitoring("radiationexposuremonitoring"),
        referral("referral"),
        report("report"),
        request("request"),
        result("result"),
        sumehr("sumehr"),
        telemonitoring("telemonitoring"),
        template("template"),
        templateAdmin("template_admin"),
        treatmentsuspension("treatmentsuspension"),
        vaccination("vaccination");
    }
    /**
    *
    * Values: draft,finalized,pendingReview,reviewed,pendingSignature,signed,canceled,sent,delivered
    */
    enum class DocumentStatus(val value: kotlin.String){
        draft("draft"),
        finalized("finalized"),
        pendingReview("pending_review"),
        reviewed("reviewed"),
        pendingSignature("pending_signature"),
        signed("signed"),
        canceled("canceled"),
        sent("sent"),
        delivered("delivered");
    }
}
