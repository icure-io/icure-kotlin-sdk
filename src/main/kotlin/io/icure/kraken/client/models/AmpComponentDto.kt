/**
* iCure Cloud API Documentation
* Spring shop sample application
*
* The version of the OpenAPI document: v0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package io.icure.kraken.client.models

import io.icure.kraken.client.models.IngredientDto
import io.icure.kraken.client.models.PharmaceuticalFormStubDto
import io.icure.kraken.client.models.RouteOfAdministrationDto
import io.icure.kraken.client.models.SamTextDto

import com.squareup.moshi.Json

/**
 * 
 * @param from 
 * @param to 
 * @param ingredients 
 * @param pharmaceuticalForms 
 * @param routeOfAdministrations 
 * @param dividable 
 * @param scored 
 * @param crushable 
 * @param containsAlcohol 
 * @param sugarFree 
 * @param modifiedReleaseType 
 * @param specificDrugDevice 
 * @param dimensions 
 * @param name 
 * @param note 
 */

data class AmpComponentDto (
    @Json(name = "from")
    val from: kotlin.Long? = null,
    @Json(name = "to")
    val to: kotlin.Long? = null,
    @Json(name = "ingredients")
    val ingredients: kotlin.collections.List<IngredientDto>? = null,
    @Json(name = "pharmaceuticalForms")
    val pharmaceuticalForms: kotlin.collections.List<PharmaceuticalFormStubDto>? = null,
    @Json(name = "routeOfAdministrations")
    val routeOfAdministrations: kotlin.collections.List<RouteOfAdministrationDto>? = null,
    @Json(name = "dividable")
    val dividable: kotlin.String? = null,
    @Json(name = "scored")
    val scored: kotlin.String? = null,
    @Json(name = "crushable")
    val crushable: AmpComponentDto.Crushable? = null,
    @Json(name = "containsAlcohol")
    val containsAlcohol: AmpComponentDto.ContainsAlcohol? = null,
    @Json(name = "sugarFree")
    val sugarFree: kotlin.Boolean? = null,
    @Json(name = "modifiedReleaseType")
    val modifiedReleaseType: kotlin.Int? = null,
    @Json(name = "specificDrugDevice")
    val specificDrugDevice: kotlin.Int? = null,
    @Json(name = "dimensions")
    val dimensions: kotlin.String? = null,
    @Json(name = "name")
    val name: SamTextDto? = null,
    @Json(name = "note")
    val note: SamTextDto? = null
) {

    /**
     * 
     * Values: y,n,x
     */
    enum class Crushable(val value: kotlin.String) {
        @Json(name = "Y") y("Y"),
        @Json(name = "N") n("N"),
        @Json(name = "X") x("X");
    }
    /**
     * 
     * Values: y,n,x
     */
    enum class ContainsAlcohol(val value: kotlin.String) {
        @Json(name = "Y") y("Y"),
        @Json(name = "N") n("N"),
        @Json(name = "X") x("X");
    }
}

