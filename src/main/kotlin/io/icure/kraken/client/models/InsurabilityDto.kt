/**
* iCure Cloud API Documentation
* Spring shop sample application
*
* The version of the OpenAPI document: v0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package io.icure.kraken.client.models


import com.squareup.moshi.Json

/**
 * This class represents a coverage of a patient by an insurance during a period or time.
 * @param parameters Insurance extra parameters.
 * @param hospitalisation Is hospitalization covered.
 * @param ambulatory Is outpatient care covered.
 * @param dental Is dental care covered.
 * @param identificationNumber Identification number of the patient at the insurance.
 * @param insuranceId Id of the Insurance.
 * @param startDate Start date of the coverage (YYYYMMDD).
 * @param endDate End date of the coverage (YYYYMMDD).
 * @param titularyId UUID of the contact person who is the policyholder of the insurance (when the patient is covered by the insurance of a third person).
 * @param encryptedSelf The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys.
 */

data class InsurabilityDto (
    /* Insurance extra parameters. */
    @Json(name = "parameters")
    val parameters: kotlin.collections.Map<kotlin.String, kotlin.String>,
    /* Is hospitalization covered. */
    @Json(name = "hospitalisation")
    val hospitalisation: kotlin.Boolean? = null,
    /* Is outpatient care covered. */
    @Json(name = "ambulatory")
    val ambulatory: kotlin.Boolean? = null,
    /* Is dental care covered. */
    @Json(name = "dental")
    val dental: kotlin.Boolean? = null,
    /* Identification number of the patient at the insurance. */
    @Json(name = "identificationNumber")
    val identificationNumber: kotlin.String? = null,
    /* Id of the Insurance. */
    @Json(name = "insuranceId")
    val insuranceId: kotlin.String? = null,
    /* Start date of the coverage (YYYYMMDD). */
    @Json(name = "startDate")
    val startDate: kotlin.Long? = null,
    /* End date of the coverage (YYYYMMDD). */
    @Json(name = "endDate")
    val endDate: kotlin.Long? = null,
    /* UUID of the contact person who is the policyholder of the insurance (when the patient is covered by the insurance of a third person). */
    @Json(name = "titularyId")
    val titularyId: kotlin.String? = null,
    /* The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys. */
    @Json(name = "encryptedSelf")
    val encryptedSelf: kotlin.String? = null
)

