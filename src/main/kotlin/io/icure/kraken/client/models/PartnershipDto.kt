/**
* iCure Cloud API Documentation
* Spring shop sample application
*
* The version of the OpenAPI document: v0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package io.icure.kraken.client.models


import com.squareup.moshi.Json

/**
 * A relationship between this patient and another person.
 * @param type Type of relationship.
 * @param status Status of the relationship.
 * @param partnerId UUID of the contact person or patient in this relationship.
 * @param meToOtherRelationshipDescription 
 * @param otherToMeRelationshipDescription 
 */

data class PartnershipDto (
    /* Type of relationship. */
    @Json(name = "type")
    val type: PartnershipDto.Type? = null,
    /* Status of the relationship. */
    @Json(name = "status")
    val status: PartnershipDto.Status? = null,
    /* UUID of the contact person or patient in this relationship. */
    @Json(name = "partnerId")
    val partnerId: kotlin.String? = null,
    @Json(name = "meToOtherRelationshipDescription")
    @Deprecated(message = "This property is deprecated.")
    val meToOtherRelationshipDescription: kotlin.String? = null,
    @Json(name = "otherToMeRelationshipDescription")
    @Deprecated(message = "This property is deprecated.")
    val otherToMeRelationshipDescription: kotlin.String? = null
) {

    /**
     * Type of relationship.
     * Values: primaryContact,primaryContactFor,family,friend,counselor,contact,brother,brotherinlaw,child,daughter,employer,father,grandchild,grandparent,husband,lawyer,mother,neighbour,notary,partner,sister,sisterinlaw,son,spouse,stepdaughter,stepfather,stepmother,stepson,tutor
     */
    enum class Type(val value: kotlin.String) {
        @Json(name = "primary_contact") primaryContact("primary_contact"),
        @Json(name = "primary_contact_for") primaryContactFor("primary_contact_for"),
        @Json(name = "family") family("family"),
        @Json(name = "friend") friend("friend"),
        @Json(name = "counselor") counselor("counselor"),
        @Json(name = "contact") contact("contact"),
        @Json(name = "brother") brother("brother"),
        @Json(name = "brotherinlaw") brotherinlaw("brotherinlaw"),
        @Json(name = "child") child("child"),
        @Json(name = "daughter") daughter("daughter"),
        @Json(name = "employer") employer("employer"),
        @Json(name = "father") father("father"),
        @Json(name = "grandchild") grandchild("grandchild"),
        @Json(name = "grandparent") grandparent("grandparent"),
        @Json(name = "husband") husband("husband"),
        @Json(name = "lawyer") lawyer("lawyer"),
        @Json(name = "mother") mother("mother"),
        @Json(name = "neighbour") neighbour("neighbour"),
        @Json(name = "notary") notary("notary"),
        @Json(name = "partner") partner("partner"),
        @Json(name = "sister") sister("sister"),
        @Json(name = "sisterinlaw") sisterinlaw("sisterinlaw"),
        @Json(name = "son") son("son"),
        @Json(name = "spouse") spouse("spouse"),
        @Json(name = "stepdaughter") stepdaughter("stepdaughter"),
        @Json(name = "stepfather") stepfather("stepfather"),
        @Json(name = "stepmother") stepmother("stepmother"),
        @Json(name = "stepson") stepson("stepson"),
        @Json(name = "tutor") tutor("tutor");
    }
    /**
     * Status of the relationship.
     * Values: active,complicated,past
     */
    enum class Status(val value: kotlin.String) {
        @Json(name = "active") active("active"),
        @Json(name = "complicated") complicated("complicated"),
        @Json(name = "past") past("past");
    }
}

