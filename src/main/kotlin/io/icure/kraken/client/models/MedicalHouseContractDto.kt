/**
* iCure Cloud API Documentation
* Spring shop sample application
*
* The version of the OpenAPI document: v0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package io.icure.kraken.client.models


import com.squareup.moshi.Json

/**
 * Contracts between the patient and the healthcare entity.
 * @param kine 
 * @param gp 
 * @param ptd 
 * @param nurse 
 * @param noKine 
 * @param noGp 
 * @param noNurse 
 * @param forcedSuspension 
 * @param options 
 * @param receipts 
 * @param contractId 
 * @param validFrom 
 * @param validTo 
 * @param mmNihii 
 * @param hcpId 
 * @param changeType 
 * @param parentContractId 
 * @param changedBy 
 * @param startOfContract 
 * @param startOfCoverage 
 * @param endOfContract 
 * @param endOfCoverage 
 * @param unsubscriptionReasonId 
 * @param ptdStart 
 * @param ptdEnd 
 * @param ptdLastInvoiced 
 * @param startOfSuspension 
 * @param endOfSuspension 
 * @param suspensionReason 
 * @param suspensionSource 
 * @param signatureType 
 * @param status 
 * @param encryptedSelf The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys.
 */

data class MedicalHouseContractDto (
    @Json(name = "kine")
    val kine: kotlin.Boolean,
    @Json(name = "gp")
    val gp: kotlin.Boolean,
    @Json(name = "ptd")
    val ptd: kotlin.Boolean,
    @Json(name = "nurse")
    val nurse: kotlin.Boolean,
    @Json(name = "noKine")
    val noKine: kotlin.Boolean,
    @Json(name = "noGp")
    val noGp: kotlin.Boolean,
    @Json(name = "noNurse")
    val noNurse: kotlin.Boolean,
    @Json(name = "forcedSuspension")
    val forcedSuspension: kotlin.Boolean,
    @Json(name = "options")
    val options: kotlin.collections.Map<kotlin.String, kotlin.String>,
    @Json(name = "receipts")
    val receipts: kotlin.collections.Map<kotlin.String, kotlin.String>,
    @Json(name = "contractId")
    val contractId: kotlin.String? = null,
    @Json(name = "validFrom")
    val validFrom: kotlin.Long? = null,
    @Json(name = "validTo")
    val validTo: kotlin.Long? = null,
    @Json(name = "mmNihii")
    val mmNihii: kotlin.String? = null,
    @Json(name = "hcpId")
    val hcpId: kotlin.String? = null,
    @Json(name = "changeType")
    val changeType: MedicalHouseContractDto.ChangeType? = null,
    @Json(name = "parentContractId")
    val parentContractId: kotlin.String? = null,
    @Json(name = "changedBy")
    val changedBy: kotlin.String? = null,
    @Json(name = "startOfContract")
    val startOfContract: kotlin.Long? = null,
    @Json(name = "startOfCoverage")
    val startOfCoverage: kotlin.Long? = null,
    @Json(name = "endOfContract")
    val endOfContract: kotlin.Long? = null,
    @Json(name = "endOfCoverage")
    val endOfCoverage: kotlin.Long? = null,
    @Json(name = "unsubscriptionReasonId")
    val unsubscriptionReasonId: kotlin.Int? = null,
    @Json(name = "ptdStart")
    val ptdStart: kotlin.Long? = null,
    @Json(name = "ptdEnd")
    val ptdEnd: kotlin.Long? = null,
    @Json(name = "ptdLastInvoiced")
    val ptdLastInvoiced: kotlin.Long? = null,
    @Json(name = "startOfSuspension")
    val startOfSuspension: kotlin.Long? = null,
    @Json(name = "endOfSuspension")
    val endOfSuspension: kotlin.Long? = null,
    @Json(name = "suspensionReason")
    val suspensionReason: MedicalHouseContractDto.SuspensionReason? = null,
    @Json(name = "suspensionSource")
    val suspensionSource: kotlin.String? = null,
    @Json(name = "signatureType")
    val signatureType: MedicalHouseContractDto.SignatureType? = null,
    @Json(name = "status")
    val status: kotlin.Int? = null,
    /* The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys. */
    @Json(name = "encryptedSelf")
    val encryptedSelf: kotlin.String? = null
) {

    /**
     * 
     * Values: inscriptionStart,inscriptionEnd,suspension,coverageChange
     */
    enum class ChangeType(val value: kotlin.String) {
        @Json(name = "inscriptionStart") inscriptionStart("inscriptionStart"),
        @Json(name = "inscriptionEnd") inscriptionEnd("inscriptionEnd"),
        @Json(name = "suspension") suspension("suspension"),
        @Json(name = "coverageChange") coverageChange("coverageChange");
    }
    /**
     * 
     * Values: notInsured,noReasonGiven,isHospitalized,outsideOfCountry,changeOfMutuality
     */
    enum class SuspensionReason(val value: kotlin.String) {
        @Json(name = "notInsured") notInsured("notInsured"),
        @Json(name = "noReasonGiven") noReasonGiven("noReasonGiven"),
        @Json(name = "isHospitalized") isHospitalized("isHospitalized"),
        @Json(name = "outsideOfCountry") outsideOfCountry("outsideOfCountry"),
        @Json(name = "changeOfMutuality") changeOfMutuality("changeOfMutuality");
    }
    /**
     * 
     * Values: holderEid,holderPaper,legalrepresentativeEid,legalrepresentativePaper
     */
    enum class SignatureType(val value: kotlin.String) {
        @Json(name = "holderEid") holderEid("holderEid"),
        @Json(name = "holderPaper") holderPaper("holderPaper"),
        @Json(name = "legalrepresentativeEid") legalrepresentativeEid("legalrepresentativeEid"),
        @Json(name = "legalrepresentativePaper") legalrepresentativePaper("legalrepresentativePaper");
    }
}

