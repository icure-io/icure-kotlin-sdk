/**
* iCure Cloud API Documentation
* Spring shop sample application
*
* The version of the OpenAPI document: v0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package io.icure.kraken.client.models

import io.icure.kraken.client.models.TelecomDto

import com.squareup.moshi.Json

/**
 * This entity represents an Address
 * @param telecoms List of other contact details available through telecom services, ex: email, phone number, fax, etc.
 * @param addressType The type of place the address represents, ex: home, office, hospital, clinic, etc. 
 * @param descr Descriptive notes about the address
 * @param street Street name
 * @param houseNumber Building / house number
 * @param postboxNumber Post / PO box number
 * @param postalCode Postal/PIN/ZIP/Area code
 * @param city Name of city in the address
 * @param state Name of state in the Address
 * @param country Name / code of country in the address
 * @param note Additional notes
 * @param encryptedSelf The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys.
 */

data class AddressDto (
    /* List of other contact details available through telecom services, ex: email, phone number, fax, etc. */
    @Json(name = "telecoms")
    val telecoms: kotlin.collections.List<TelecomDto>,
    /* The type of place the address represents, ex: home, office, hospital, clinic, etc.  */
    @Json(name = "addressType")
    val addressType: AddressDto.AddressType? = null,
    /* Descriptive notes about the address */
    @Json(name = "descr")
    val descr: kotlin.String? = null,
    /* Street name */
    @Json(name = "street")
    val street: kotlin.String? = null,
    /* Building / house number */
    @Json(name = "houseNumber")
    val houseNumber: kotlin.String? = null,
    /* Post / PO box number */
    @Json(name = "postboxNumber")
    val postboxNumber: kotlin.String? = null,
    /* Postal/PIN/ZIP/Area code */
    @Json(name = "postalCode")
    val postalCode: kotlin.String? = null,
    /* Name of city in the address */
    @Json(name = "city")
    val city: kotlin.String? = null,
    /* Name of state in the Address */
    @Json(name = "state")
    val state: kotlin.String? = null,
    /* Name / code of country in the address */
    @Json(name = "country")
    val country: kotlin.String? = null,
    /* Additional notes */
    @Json(name = "note")
    val note: kotlin.String? = null,
    /* The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys. */
    @Json(name = "encryptedSelf")
    val encryptedSelf: kotlin.String? = null
) {

    /**
     * The type of place the address represents, ex: home, office, hospital, clinic, etc. 
     * Values: home,work,vacation,hospital,clinic,hq,other,temporary,postal,diplomatic,reference
     */
    enum class AddressType(val value: kotlin.String) {
        @Json(name = "home") home("home"),
        @Json(name = "work") work("work"),
        @Json(name = "vacation") vacation("vacation"),
        @Json(name = "hospital") hospital("hospital"),
        @Json(name = "clinic") clinic("clinic"),
        @Json(name = "hq") hq("hq"),
        @Json(name = "other") other("other"),
        @Json(name = "temporary") temporary("temporary"),
        @Json(name = "postal") postal("postal"),
        @Json(name = "diplomatic") diplomatic("diplomatic"),
        @Json(name = "reference") reference("reference");
    }
}

