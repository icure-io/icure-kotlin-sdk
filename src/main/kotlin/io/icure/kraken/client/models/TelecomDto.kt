/**
* iCure Cloud API Documentation
* Spring shop sample application
*
* The version of the OpenAPI document: v0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package io.icure.kraken.client.models


import com.squareup.moshi.Json

/**
 * This entity represents available contact details of a user, reachable by telecom methods
 * @param telecomType The type of telecom method being used, ex: landline phone, mobile phone, email, fax, etc.
 * @param telecomNumber 
 * @param telecomDescription 
 * @param encryptedSelf The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys.
 */

data class TelecomDto (
    /* The type of telecom method being used, ex: landline phone, mobile phone, email, fax, etc. */
    @Json(name = "telecomType")
    val telecomType: TelecomDto.TelecomType? = null,
    @Json(name = "telecomNumber")
    val telecomNumber: kotlin.String? = null,
    @Json(name = "telecomDescription")
    val telecomDescription: kotlin.String? = null,
    /* The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys. */
    @Json(name = "encryptedSelf")
    val encryptedSelf: kotlin.String? = null
) {

    /**
     * The type of telecom method being used, ex: landline phone, mobile phone, email, fax, etc.
     * Values: mobile,phone,email,fax,skype,im,medibridge,ehealthbox,apicrypt,web,print,disk,other
     */
    enum class TelecomType(val value: kotlin.String) {
        @Json(name = "mobile") mobile("mobile"),
        @Json(name = "phone") phone("phone"),
        @Json(name = "email") email("email"),
        @Json(name = "fax") fax("fax"),
        @Json(name = "skype") skype("skype"),
        @Json(name = "im") im("im"),
        @Json(name = "medibridge") medibridge("medibridge"),
        @Json(name = "ehealthbox") ehealthbox("ehealthbox"),
        @Json(name = "apicrypt") apicrypt("apicrypt"),
        @Json(name = "web") web("web"),
        @Json(name = "print") print("print"),
        @Json(name = "disk") disk("disk"),
        @Json(name = "other") other("other");
    }
}

