/**
* iCure Cloud API Documentation
* Spring shop sample application
*
* The version of the OpenAPI document: v0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package io.icure.kraken.client.models


import com.squareup.moshi.Json

/**
 * 
 * @param id 
 * @param dateCode 
 * @param logicalId 
 * @param label 
 * @param userId 
 * @param contactId 
 * @param serviceId 
 * @param tarificationId 
 * @param code 
 * @param paymentType 
 * @param paid 
 * @param totalAmount 
 * @param reimbursement 
 * @param patientIntervention 
 * @param doctorSupplement 
 * @param conventionAmount 
 * @param vat 
 * @param error 
 * @param contract 
 * @param contractDate 
 * @param units 
 * @param side 
 * @param timeOfDay 
 * @param eidReadingHour 
 * @param eidReadingValue 
 * @param override3rdPayerCode 
 * @param override3rdPayerReason 
 * @param transplantationCode 
 * @param prescriberNorm 
 * @param percentNorm 
 * @param prescriberNihii 
 * @param relatedCode 
 * @param prescriptionDate 
 * @param derogationMaxNumber 
 * @param prescriberSsin 
 * @param prescriberLastName 
 * @param prescriberFirstName 
 * @param prescriberCdHcParty 
 * @param locationNihii 
 * @param locationCdHcParty 
 * @param canceled 
 * @param accepted 
 * @param pending 
 * @param resent 
 * @param archived 
 * @param lost 
 * @param insuranceJustification 
 * @param cancelPatientInterventionReason 
 * @param status 
 * @param encryptedSelf The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys.
 */

data class InvoicingCodeDto (
    @Json(name = "id")
    val id: kotlin.String? = null,
    @Json(name = "dateCode")
    val dateCode: kotlin.Long? = null,
    @Json(name = "logicalId")
    val logicalId: kotlin.String? = null,
    @Json(name = "label")
    val label: kotlin.String? = null,
    @Json(name = "userId")
    val userId: kotlin.String? = null,
    @Json(name = "contactId")
    val contactId: kotlin.String? = null,
    @Json(name = "serviceId")
    val serviceId: kotlin.String? = null,
    @Json(name = "tarificationId")
    val tarificationId: kotlin.String? = null,
    @Json(name = "code")
    val code: kotlin.String? = null,
    @Json(name = "paymentType")
    val paymentType: InvoicingCodeDto.PaymentType? = null,
    @Json(name = "paid")
    val paid: kotlin.Double? = null,
    @Json(name = "totalAmount")
    val totalAmount: kotlin.Double? = null,
    @Json(name = "reimbursement")
    val reimbursement: kotlin.Double? = null,
    @Json(name = "patientIntervention")
    val patientIntervention: kotlin.Double? = null,
    @Json(name = "doctorSupplement")
    val doctorSupplement: kotlin.Double? = null,
    @Json(name = "conventionAmount")
    val conventionAmount: kotlin.Double? = null,
    @Json(name = "vat")
    val vat: kotlin.Double? = null,
    @Json(name = "error")
    val error: kotlin.String? = null,
    @Json(name = "contract")
    val contract: kotlin.String? = null,
    @Json(name = "contractDate")
    val contractDate: kotlin.Long? = null,
    @Json(name = "units")
    val units: kotlin.Int? = null,
    @Json(name = "side")
    val side: kotlin.Int? = null,
    @Json(name = "timeOfDay")
    val timeOfDay: kotlin.Int? = null,
    @Json(name = "eidReadingHour")
    val eidReadingHour: kotlin.Int? = null,
    @Json(name = "eidReadingValue")
    val eidReadingValue: kotlin.String? = null,
    @Json(name = "override3rdPayerCode")
    val override3rdPayerCode: kotlin.Int? = null,
    @Json(name = "override3rdPayerReason")
    val override3rdPayerReason: kotlin.String? = null,
    @Json(name = "transplantationCode")
    val transplantationCode: kotlin.Int? = null,
    @Json(name = "prescriberNorm")
    val prescriberNorm: kotlin.Int? = null,
    @Json(name = "percentNorm")
    val percentNorm: kotlin.Int? = null,
    @Json(name = "prescriberNihii")
    val prescriberNihii: kotlin.String? = null,
    @Json(name = "relatedCode")
    val relatedCode: kotlin.String? = null,
    @Json(name = "prescriptionDate")
    val prescriptionDate: kotlin.Long? = null,
    @Json(name = "derogationMaxNumber")
    val derogationMaxNumber: kotlin.Int? = null,
    @Json(name = "prescriberSsin")
    val prescriberSsin: kotlin.String? = null,
    @Json(name = "prescriberLastName")
    val prescriberLastName: kotlin.String? = null,
    @Json(name = "prescriberFirstName")
    val prescriberFirstName: kotlin.String? = null,
    @Json(name = "prescriberCdHcParty")
    val prescriberCdHcParty: kotlin.String? = null,
    @Json(name = "locationNihii")
    val locationNihii: kotlin.String? = null,
    @Json(name = "locationCdHcParty")
    val locationCdHcParty: kotlin.String? = null,
    @Json(name = "canceled")
    val canceled: kotlin.Boolean? = null,
    @Json(name = "accepted")
    val accepted: kotlin.Boolean? = null,
    @Json(name = "pending")
    val pending: kotlin.Boolean? = null,
    @Json(name = "resent")
    val resent: kotlin.Boolean? = null,
    @Json(name = "archived")
    val archived: kotlin.Boolean? = null,
    @Json(name = "lost")
    val lost: kotlin.Boolean? = null,
    @Json(name = "insuranceJustification")
    val insuranceJustification: kotlin.Int? = null,
    @Json(name = "cancelPatientInterventionReason")
    val cancelPatientInterventionReason: kotlin.Int? = null,
    @Json(name = "status")
    val status: kotlin.Long? = null,
    /* The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys. */
    @Json(name = "encryptedSelf")
    val encryptedSelf: kotlin.String? = null
) {

    /**
     * 
     * Values: cash,wired,insurance,creditcard,debitcard,paypal,bitcoin,other
     */
    enum class PaymentType(val value: kotlin.String) {
        @Json(name = "cash") cash("cash"),
        @Json(name = "wired") wired("wired"),
        @Json(name = "insurance") insurance("insurance"),
        @Json(name = "creditcard") creditcard("creditcard"),
        @Json(name = "debitcard") debitcard("debitcard"),
        @Json(name = "paypal") paypal("paypal"),
        @Json(name = "bitcoin") bitcoin("bitcoin"),
        @Json(name = "other") other("other");
    }
}

