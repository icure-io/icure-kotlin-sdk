/**
* iCure Cloud API Documentation
* Spring shop sample application
*
* The version of the OpenAPI document: v0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package io.icure.kraken.client.models

import io.icure.kraken.client.models.PropertyStubDto

import com.squareup.moshi.Json

/**
 * This entity represents a group
 * @param id The id of the group. We encourage using either a v4 UUID or a HL7 Id.
 * @param superAdmin Whether the group has a super admin permission, originally set to no access.
 * @param properties Extra properties for the user. Those properties are typed (see class Property)
 * @param rev The revision of the group in the database, used for conflict management / optimistic locking.
 * @param deletionDate hard delete (unix epoch in ms) timestamp of the object. Filled automatically when deletePatient is called.
 * @param name Username for the group
 * @param password Password for the group access
 * @param servers List of servers accessible to the group
 * @param superGroup 
 */

data class GroupDto (
    /* The id of the group. We encourage using either a v4 UUID or a HL7 Id. */
    @Json(name = "id")
    val id: kotlin.String,
    /* Whether the group has a super admin permission, originally set to no access. */
    @Json(name = "superAdmin")
    val superAdmin: kotlin.Boolean,
    /* Extra properties for the user. Those properties are typed (see class Property) */
    @Json(name = "properties")
    val properties: kotlin.collections.List<PropertyStubDto>,
    /* The revision of the group in the database, used for conflict management / optimistic locking. */
    @Json(name = "rev")
    val rev: kotlin.String? = null,
    /* hard delete (unix epoch in ms) timestamp of the object. Filled automatically when deletePatient is called. */
    @Json(name = "deletionDate")
    val deletionDate: kotlin.Long? = null,
    /* Username for the group */
    @Json(name = "name")
    val name: kotlin.String? = null,
    /* Password for the group access */
    @Json(name = "password")
    val password: kotlin.String? = null,
    /* List of servers accessible to the group */
    @Json(name = "servers")
    val servers: kotlin.collections.List<kotlin.String>? = null,
    @Json(name = "superGroup")
    val superGroup: kotlin.String? = null
)

