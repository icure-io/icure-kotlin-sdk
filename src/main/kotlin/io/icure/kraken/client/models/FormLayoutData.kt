/**
* iCure Cloud API Documentation
* Spring shop sample application
*
* The version of the OpenAPI document: v0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package io.icure.kraken.client.models

import io.icure.kraken.client.models.ContentDto
import io.icure.kraken.client.models.Editor
import io.icure.kraken.client.models.FormDataOption
import io.icure.kraken.client.models.FormPlanning
import io.icure.kraken.client.models.Formula
import io.icure.kraken.client.models.GuiCode
import io.icure.kraken.client.models.GuiCodeType
import io.icure.kraken.client.models.Suggest

import com.squareup.moshi.Json

/**
 * 
 * @param subForm 
 * @param irrelevant 
 * @param determinesSscontactName 
 * @param type 
 * @param name 
 * @param sortOrder 
 * @param options 
 * @param descr 
 * @param label 
 * @param editor 
 * @param defaultValue 
 * @param defaultStatus 
 * @param suggest 
 * @param plannings 
 * @param tags 
 * @param codes 
 * @param codeTypes 
 * @param formulas 
 */

data class FormLayoutData (
    @Json(name = "subForm")
    val subForm: kotlin.Boolean? = null,
    @Json(name = "irrelevant")
    val irrelevant: kotlin.Boolean? = null,
    @Json(name = "determinesSscontactName")
    val determinesSscontactName: kotlin.Boolean? = null,
    @Json(name = "type")
    val type: kotlin.String? = null,
    @Json(name = "name")
    val name: kotlin.String? = null,
    @Json(name = "sortOrder")
    val sortOrder: kotlin.Double? = null,
    @Json(name = "options")
    val options: kotlin.collections.Map<kotlin.String, FormDataOption>? = null,
    @Json(name = "descr")
    val descr: kotlin.String? = null,
    @Json(name = "label")
    val label: kotlin.String? = null,
    @Json(name = "editor")
    val editor: Editor? = null,
    @Json(name = "defaultValue")
    val defaultValue: kotlin.collections.List<ContentDto>? = null,
    @Json(name = "defaultStatus")
    val defaultStatus: kotlin.Int? = null,
    @Json(name = "suggest")
    val suggest: kotlin.collections.List<Suggest>? = null,
    @Json(name = "plannings")
    val plannings: kotlin.collections.List<FormPlanning>? = null,
    @Json(name = "tags")
    val tags: kotlin.collections.List<GuiCode>? = null,
    @Json(name = "codes")
    val codes: kotlin.collections.List<GuiCode>? = null,
    @Json(name = "codeTypes")
    val codeTypes: kotlin.collections.List<GuiCodeType>? = null,
    @Json(name = "formulas")
    val formulas: kotlin.collections.List<Formula>? = null
)

