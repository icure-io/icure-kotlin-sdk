/**
* iCure Cloud API Documentation
* Spring shop sample application
*
* The version of the OpenAPI document: v0.0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package io.icure.kraken.client.models

import io.icure.kraken.client.models.AmpComponentDto
import io.icure.kraken.client.models.AmppDto
import io.icure.kraken.client.models.CompanyDto
import io.icure.kraken.client.models.SamTextDto
import io.icure.kraken.client.models.VmpStubDto

import com.squareup.moshi.Json

/**
 * 
 * @param id 
 * @param blackTriangle 
 * @param ampps 
 * @param components 
 * @param rev 
 * @param deletionDate hard delete (unix epoch in ms) timestamp of the object. Filled automatically when deletePatient is called.
 * @param from 
 * @param to 
 * @param code 
 * @param vmp 
 * @param officialName 
 * @param status 
 * @param name 
 * @param medicineType 
 * @param company 
 * @param abbreviatedName 
 * @param proprietarySuffix 
 * @param prescriptionName 
 */

data class AmpDto (
    @Json(name = "id")
    val id: kotlin.String,
    @Json(name = "blackTriangle")
    val blackTriangle: kotlin.Boolean,
    @Json(name = "ampps")
    val ampps: kotlin.collections.List<AmppDto>,
    @Json(name = "components")
    val components: kotlin.collections.List<AmpComponentDto>,
    @Json(name = "rev")
    val rev: kotlin.String? = null,
    /* hard delete (unix epoch in ms) timestamp of the object. Filled automatically when deletePatient is called. */
    @Json(name = "deletionDate")
    val deletionDate: kotlin.Long? = null,
    @Json(name = "from")
    val from: kotlin.Long? = null,
    @Json(name = "to")
    val to: kotlin.Long? = null,
    @Json(name = "code")
    val code: kotlin.String? = null,
    @Json(name = "vmp")
    val vmp: VmpStubDto? = null,
    @Json(name = "officialName")
    val officialName: kotlin.String? = null,
    @Json(name = "status")
    val status: AmpDto.Status? = null,
    @Json(name = "name")
    val name: SamTextDto? = null,
    @Json(name = "medicineType")
    val medicineType: AmpDto.MedicineType? = null,
    @Json(name = "company")
    val company: CompanyDto? = null,
    @Json(name = "abbreviatedName")
    val abbreviatedName: SamTextDto? = null,
    @Json(name = "proprietarySuffix")
    val proprietarySuffix: SamTextDto? = null,
    @Json(name = "prescriptionName")
    val prescriptionName: SamTextDto? = null
) {

    /**
     * 
     * Values: aUTHORIZED,sUSPENDED,rEVOKED
     */
    enum class Status(val value: kotlin.String) {
        @Json(name = "AUTHORIZED") aUTHORIZED("AUTHORIZED"),
        @Json(name = "SUSPENDED") sUSPENDED("SUSPENDED"),
        @Json(name = "REVOKED") rEVOKED("REVOKED");
    }
    /**
     * 
     * Values: aLLOPATHIC,hOMEOPATHIC
     */
    enum class MedicineType(val value: kotlin.String) {
        @Json(name = "ALLOPATHIC") aLLOPATHIC("ALLOPATHIC"),
        @Json(name = "HOMEOPATHIC") hOMEOPATHIC("HOMEOPATHIC");
    }
}

